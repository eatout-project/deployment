apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      component: kafka-broker
  template:
    metadata:
      labels:
        component: kafka-broker
    spec:
      containers:
        - image: confluentinc/cp-kafka:7.3.0
          imagePullPolicy: Always
          name: kafka-broker
          ports:
            - containerPort:
                9092
          resources:
            requests:
              cpu: "5m"
              memory: "400Mi"
            limits:
              cpu: "10m"
              memory: "600Mi"
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper2-clusterip-service
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://$(MY_POD_IP):19092,EXTERNAL://$(MY_POD_IP):9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            - name: KAFKA_JMX_HOSTNAME
              value: "$(MY_POD_IP)"
            - name: KAFKA_JMX_PORT
              value: "9999"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_LOG4J_LOGGERS
              value: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
              value: "true"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_AUTHORIZER_CLASS_NAME
              value: kafka.security.authorizer.AclAuthorizer



#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: kafka-broker
#  namespace: kafka
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      component: kafka-broker
#  template:
#    metadata:
#      labels:
#        component: kafka-broker
#    spec:
#      containers:
#        - image: confluentinc/cp-kafka:7.3.0
#          imagePullPolicy: Always
#          name: kafka-broker
#          ports:
#            - containerPort:
#                9092
#          env:
#            - name: MY_POD_IP
#              valueFrom:
#                fieldRef:
#                  fieldPath: status.podIP
#            - name: KAFKA_BROKER_ID
#              value: 1
#            - name: KAFKA_ZOOKEEPER_CONNECT
#              value: zookeeper2-clusterip-service
#            - name: KAFKA_ADVERTISED_LISTENERS
#              value: "INTERNAL://kafka-broker:19092,EXTERNAL://$(MY_POD_IP):9092"
#            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
#              value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
#            - name: KAFKA_JMX_HOSTNAME
#              value: "$(MY_POD_IP)"
#            - name: KAFKA_JMX_PORT
#              value: 9999
#            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
#              value: 1
#            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
#              value: 1
#            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
#              value: 1
#            - name: KAFKA_LOG4J_LOGGERS
#              value: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#            - name: KAFKA_INTER_BROKER_LISTENER_NAME
#              value: INTERNAL
#            - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
#              value: "true"
#            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
#              value: true
#            - name: KAFKA_AUTHORIZER_CLASS_NAME
#              value: kafka.security.authorizer.AclAuthorizer
#
#  kafka:
#    image: confluentinc/cp-kafka:7.3.0
#    hostname: kafka
#    container_name: kafka
#    ports:
#      - "9092:9092"
#      - "29092:29092"
#      - "9999:9999"
#    networks: [
#      account-service-network,
#      app-tier
#    ]
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://host.docker.internal:9092,DOCKER://host.docker.internal:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_JMX_PORT: 9999
#      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true